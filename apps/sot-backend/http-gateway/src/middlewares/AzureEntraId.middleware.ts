import { Injectable, NestMiddleware } from '@nestjs/common';
import { Request, Response, NextFunction } from 'express';
import * as jwt from 'jsonwebtoken';
import * as jwksRsa from 'jwks-rsa';

@Injectable()
export class AzureAdMiddleware implements NestMiddleware {
    private jwksClient: jwksRsa.JwksClient;

    constructor() {
        this.jwksClient = jwksRsa({
            cache: true,
            rateLimit: true,
            jwksRequestsPerMinute: 5,
            jwksUri: `https://login.microsoftonline.com/0ae51e19-07c8-4e4b-bb6d-648ee58410f4/discovery/v2.0/keys`,
        });
    }
    use(req: Request, res: Response, next: NextFunction) {
        const token = req.headers.authorization?.split(' ')[1];
        console.log(token)
        if (!token) {
            return res.status(401).send('Unauthorized');
        }

        const getKey = (header: any, callback: any) => {
            this.jwksClient.getSigningKey(header.kid, (err, key) => {
                const signingKey = key.getPublicKey();
                callback(null, signingKey);
            });
        };

        jwt.verify(token, getKey, {
            audience: 'd3e5ad7f-3183-4811-a01c-b1ad27a3736d',
            issuer: `https://login.microsoftonline.com/0ae51e19-07c8-4e4b-bb6d-648ee58410f4/v2.0`,
            algorithms: ['RS256'],
        }, (err, decoded) => {
            if (err) {
                return res.status(401).send('The provided token was not generated by our Azure service');
            }
            console.log("Decoded: ", decoded)
            next();
        });
    }
}